SET SERVEROUTPUT ON;
DECLARE
nCount NUMBER;
BEGIN
SELECT count(*) into nCount FROM user_tables where table_name = 'STUDENT';
IF(nCount > 0)
THEN
    DBMS_OUTPUT.PUT_LINE('TABLE STUDENT ALREADY EXISTS');
ELSE
    EXECUTE IMMEDIATE 'CREATE TABLE STUDENT(
      MEMBER_ID NUMBER(10)REFERENCES MEMBER(MEMBER_ID),
      UNI_ID NUMBER(10) REFERENCES UNIVERSITY(UNI_ID),
      MAJ_ID NUMBER(10) REFERENCES COURSE_MAJOR(MAJ_ID),
      DEGREE_LEVEL NUMBER(10) REFERENCES COURSE_MAJOR(MAJ_ID),
      EMAIL VARCHAR(400) NOT NULL,
      STUDENT_BACKROUND VARCHAR(50) NOT NULL, 
      EXPECTED_GRADDATE DATE NOT NULL,
      CHECK(REGEXP_LIKE(EMAIL,''.[EeDduU$'')))';    

EXECUTE IMMEDIATE 'INSERT INTO STUDENT (MEMBER_ID, UNI_ID, MAJ_ID, DEGREE_LEVEL, EMAIL, STUDENT_BACKROUND, EXPECTED_GRADDATE,) VALUES (10, 11,4,graduate,"sharma.aara@northeastern.edu","information systems",2022)';
EXECUTE IMMEDIATE 'INSERT INTO STUDENT (MEMBER_ID, UNI_ID, MAJ_ID, DEGREE_LEVEL, EMAIL, STUDENT_BACKROUND, EXPECTED_GRADDATE,) VALUES (11, 12,5,undergraduate,"signh.yash@northeastern.edu","coumputer science",2022)';
EXECUTE IMMEDIATE 'INSERT INTO STUDENT (MEMBER_ID, UNI_ID, MAJ_ID, DEGREE_LEVEL, EMAIL, STUDENT_BACKROUND, EXPECTED_GRADDATE,) VALUES (12, 13,2,graduate,"mehta.vatsa@northeastern.edu","engineering",2023)';
EXECUTE IMMEDIATE 'INSERT INTO STUDENT (MEMBER_ID, UNI_ID, MAJ_ID, DEGREE_LEVEL, EMAIL, STUDENT_BACKROUND, EXPECTED_GRADDATE,) VALUES (13, 13,6,undergraduate,"signh.yash@northeastern.edu","informationsystem",2024)';
EXECUTE IMMEDIATE 'INSERT INTO STUDENT (MEMBER_ID, UNI_ID, MAJ_ID, DEGREE_LEVEL, EMAIL, STUDENT_BACKROUND, EXPECTED_GRADDATE,) VALUES (14,12,8,graduate,"rohan.chaudhry@northeastern.edu","coumputer science",2022)';
EXECUTE IMMEDIATE 'INSERT INTO STUDENT (MEMBER_ID, UNI_ID, MAJ_ID, DEGREE_LEVEL, EMAIL, STUDENT_BACKROUND, EXPECTED_GRADDATE,) VALUES (15, 13,5,undergraduate,".anuj.gupta@northeastern.edu","informatics",2021)';

END IF;


SELECT count(*) into nCount FROM user_tables where table_name = 'Prof_University';
IF(nCount > 0)
THEN
    DBMS_OUTPUT.PUT_LINE('Prof_University TABLE ALREADY EXISTS');
ELSE
    EXECUTE IMMEDIATE 'CREATE TABLE Prof_University(
    ID NUMBER GENERATED BY DEFAULT AS IDENTITY(START with 10 INCREMENT by 5),
    PROF_ID NUMBER(10) REFERENCES MEMBER(MEMBER_ID),
    UNI_ID NUMBER(10) REFERENCES UNIVERSITY(UNI_ID),
    EMAIL VARCHAR(100),  
    CHECK(REGEXP_LIKE(EMAIL,''.[EeDduU$'')))';

END IF;

EXECUTE IMMEDIATE 'INSERT INTO Prof_University (PROF_ID, UNI_ID, EMAIL) VALUES (5,6,"Karagulya.naveen@northeastern.edu")';
EXECUTE IMMEDIATE 'INSERT INTO Prof_University (PROF_ID, UNI_ID, EMAIL) VALUES (6,7,"gushchin.anri@northeastern.edu")';
EXECUTE IMMEDIATE 'INSERT INTO Prof_University (PROF_ID, UNI_ID, EMAIL) VALUES (7,8,liu.handan@northeastern.edu")';
EXECUTE IMMEDIATE 'INSERT INTO Prof_University (PROF_ID, UNI_ID, EMAIL) VALUES (9,10,"bugara.kal@northeastern.edu")';
EXECUTE IMMEDIATE 'INSERT INTO Prof_University (PROF_ID, UNI_ID, EMAIL) VALUES (8,12,"nick.brown@northeastern.edu")';
SELECT count(*) into nCount FROM user_tables where table_name = 'OPEN_SOURCE_PROJECTS';
IF(nCount > 0)
THEN
    DBMS_OUTPUT.PUT_LINE('OPEN_SOURCE_PROJECTS TABLE ALREADY EXISTS');
ELSE
    EXECUTE IMMEDIATE 'CREATE TABLE OPEN_SOURCE_PROJECTS(
    PROJ_ID NUMBER (10) UNIQUE PRIMARY KEY,
    PROJ_NAME  VARCHAR(100) NOT NULL,
    PROJ_DESC  VARCHAR(4000) NOT NULL,
    PROJ_REPO VARCHAR(400) NOT NULL,
    PROF_ID  NUMBER(10) REFERENCES MEMBER(MEMBER_ID))';
END IF;

EXECUTE IMMEDIATE 'INSERT INTO OPEN_SOURCE_PROJECTS (PROJ_ID, PROJ_NAME,PROJ_DESC,PROJ_REPO,PROF_ID) VALUES (12,"ORION","https://github.com/ankita2310/DMDD_Orion",5")';

SELECT count(*) into nCount FROM user_tables where table_name = 'EVENT';
IF(nCount > 0)
THEN
    DBMS_OUTPUT.PUT_LINE('EVENT TABLE ALREADY EXISTS');
ELSE
    EXECUTE IMMEDIATE 'CREATE TABLE EVENT(
    EVT_ID NUMBER (10) UNIQUE PRIMARY KEY,
    EVT_NAME VARCHAR(100) NOT NULL,
    EVT_CAT_ID NUMBER(10) NOT NULL REFERENCES EVENT_CATEGORY(EVT_CATEGORY_ID),
    EVT_DATETIME TIMESTAMP NOT NULL,
    EVT_HOST_ID  NUMBER(10) REFERENCES MEMBER(MEMBER_ID)
    EVT_VENUE NUMBER(10) REFERENCES EVENT_SITE (SITE_ID )
    EVT_STATUS NUMBER(10) REFRENCES EVENT_STATUS(EVT_STATUS)
    EVT_LINK VARCHAR(400) NOTNULL';

EXECUTE IMMEDIATE 'INSERT INTO EVENT (EVT_ID, EVT_NAME,EVT_CAT,EVT_DATETIME,EVT_VENUE,EVT_STATUS,EVT_LINK) VALUES (3,"OVERCOMING IMPOSTER SYNDROME","17/5/2021","Ell Hall","OPEN","http://calendar.northeastern.edu/event/overcoming_imposter_syndrome_in_academia")';
EXECUTE IMMEDIATE 'INSERT INTO EVENT (EVT_ID, EVT_NAME,EVT_CAT,EVT_DATETIME,EVT_VENUE,EVT_STATUS,EVT_LINK) VALUES (4,"Linguistics Program Poster Session","4/5/2021","Snell Library","OPEN","http://calendar.northeastern.edu/event/linguistics_program_poster_session")';    
EXECUTE IMMEDIATE 'INSERT INTO EVENT (EVT_ID, EVT_NAME,EVT_CAT,EVT_DATETIME,EVT_VENUE,EVT_STATUS,EVT_LINK) VALUES (5,"Post-COVID Futures: How Design and Architecture Affect Public Health, Wellness, and the Future of Work","25/5/2021","online","OPEN","http://calendar.northeastern.edu/event/post-covid_futures_how_design_and_architecture_affect_public_health_wellness_and_the_future_of_work")';  
EXECUTE IMMEDIATE 'INSERT INTO EVENT (EVT_ID, EVT_NAME,EVT_CAT,EVT_DATETIME,EVT_VENUE,EVT_STATUS,EVT_LINK) VALUES (6,"ECE PhD Dissertation Defense: Ahmet Oner","online","OPEN","http://calendar.northeastern.edu/event/ece_phd_dissertation_defense_ahmet_oner")';  
EXECUTE IMMEDIATE 'INSERT INTO EVENT (EVT_ID, EVT_NAME,EVT_CAT,EVT_DATETIME,EVT_VENUE,EVT_STATUS,EVT_LINK) VALUES (7,"ECE MS Thesis Defense: Yize Li","online","OPEN","http://calendar.northeastern.edu/event/ece_ms_thesis_defense_yize_li")';  

END IF;
SELECT count(*) into nCount FROM user_tables where table_name = 'EVENT_REGISTRATION';
IF(nCount > 0)
THEN
    DBMS_OUTPUT.PUT_LINE('EVENT_REGISTRATION TABLE ALREADY EXISTS');
ELSE
    EXECUTE IMMEDIATE 'CREATE TABLE EVENT_REGISTRATION (
    REG_ID NUMBER GENERATED BY DEFAULT AS IDENTITY(START with 10 INCREMENT by 5),
    EVT_ID NUMBER(10) REFERENCES EVENT(EVT_ID) ON DELETE CASCADE,
    MEMBER_ID NUMBER(10) NOT NULL REFERENCES MEMBER(MEMBER_ID)';
    
EXECUTE IMMEDIATE 'INSERT INTO EVENT_REGISTRATION (EVT_ID, MEMBER_ID) VALUES (3,5)';
EXECUTE IMMEDIATE 'INSERT INTO EVENT_REGISTRATION (EVT_ID, MEMBER_ID) VALUES (4,6)';
EXECUTE IMMEDIATE 'INSERT INTO EVENT_REGISTRATION (EVT_ID, MEMBER_ID) VALUES (5,7)';
EXECUTE IMMEDIATE 'INSERT INTO EVENT_REGISTRATION (EVT_ID, MEMBER_ID) VALUES (6,8)';

END IF;
END;


