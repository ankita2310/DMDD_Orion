
SET SERVEROUTPUT ON;
DECLARE
	nCount NUMBER;
BEGIN
	SELECT 
		count(*) 
	into nCount 
	FROM 
		user_tables 
	where 
		table_name = 'Prof_University';
	IF(nCount > 0) THEN
    		DBMS_OUTPUT.PUT_LINE('Prof_University TABLE ALREADY EXISTS');
	ELSE
    		EXECUTE IMMEDIATE 'CREATE TABLE Prof_University(
    	ID NUMBER(10) SURROGATE KEY,
    	PROF_ID NUMBER(10) REFERENCES MEMBER(MEMBER_ID),
    	UNI_ID NUMBER(10) REFERENCES UNIVERSITY(UNI_ID),
    	EMAIL VARCHAR(100),  
    	END IF;
	SELECT 
		count(*) 
	into nCount 
	FROM 
		user_tables 
	where 
		table_name = 'OPEN_SOURCE_PROJECTS';
	IF(nCount > 0) THEN
    		DBMS_OUTPUT.PUT_LINE('OPEN_SOURCE_PROJECTS TABLE ALREADY EXISTS');
	ELSE
    		EXECUTE IMMEDIATE 'CREATE TABLE OPEN_SOURCE_PROJECTS(
    	PROJ_ID NUMBER (10) UNIQUE PRIMARY KEY,
    	PROJ_NAME  VARCHAR(100) NOT NULL,
    	LAST_NAME VARCHAR(100) NOT NULL,
    	PROJ_DESC  VARCHAR(4000) NOT NULL,
    	PROJ_REPO VARCHAR(400) NOT NULL,
    	PROF_ID  NUMBER(10) REFERENCES MEMBER(MEMBER_ID))';
	END IF;
	SELECT 
		count(*) 
	into nCount 
	FROM 
		user_tables 
	where 
		table_name = 'EVENT';
	IF(nCount > 0) THEN
    		DBMS_OUTPUT.PUT_LINE('EVENT TABLE ALREADY EXISTS');
	ELSE
    		EXECUTE IMMEDIATE 'CREATE TABLE EVENT(
    	EVT_ID NUMBER (10) UNIQUE PRIMARY KEY,
    	EVT_NAME VARCHAR(100) NOT NULL,
    	EVT_CAT_ID INTEGER(10) NOT NULL REFERENCES EVENT_CATEGORY(EVT_CATEGORY_ID),
    	EVT_DATETIME TIMESTAMP NOT NULL,
    	EVT_HOST_ID  NUMBER(10) REFERENCES MEMBER(MEMBER_ID)
    	EVT_VENUE NUMBER(10) REFERENCES EVENT_SITE (SITE_ID )
    	ECT_STATUS NUMBER(10) REFRENCES EVENT_STATUS(EVT_STATUS)
    	EVT_LINK VARCHAR(400) NOTNULL';
	END IF;

END;