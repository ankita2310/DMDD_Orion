SET SERVEROUTPUT ON;
DECLARE
nCount NUMBER;
BEGIN
SELECT count(*) into nCount FROM user_tables where table_name = 'STUDENT';
IF(nCount > 0)
THEN
    DBMS_OUTPUT.PUT_LINE('TABLE STUDENT ALREADY EXISTS');
ELSE
    EXECUTE IMMEDIATE 'CREATE TABLE STUDENT(
      MEMBER_ID NUMBER(10)REFERENCES MEMBER(MEMBER_ID),
      UNI_ID NUMBER(10) REFERENCES UNIVERSITY(UNI_ID),
      MAJ_ID NUMBER(10) REFERENCES COURSE_MAJOR(MAJ_ID),
      DEGREE_LEVEL NUMBER(10) REFERENCES COURSE_MAJOR(MAJ_ID),
      EMAIL VARCHAR(400) NOT NULL,
      STUDENT_BACKROUND VARCHAR(50) NOT NULL, 
      EXPECTED_GRADDATE DATE NOT NULL,
      CHECK(REGEXP_LIKE(EMAIL,''.[EeDduU$'')))';    

EXECUTE IMMEDIATE 'INSERT INTO STUDENT (MEMBER_ID, UNI_ID, MAJ_ID, DEGREE_LEVEL, EMAIL, STUDENT_BACKROUND, EXPECTED_GRADDATE,) VALUES (10, 11,4,graduate,"sharma.aara@northeastern.edu","coumputer science",2022)';

END IF;


SELECT count(*) into nCount FROM user_tables where table_name = 'Prof_University';
IF(nCount > 0)
THEN
    DBMS_OUTPUT.PUT_LINE('Prof_University TABLE ALREADY EXISTS');
ELSE
    EXECUTE IMMEDIATE 'CREATE TABLE Prof_University(
    ID NUMBER GENERATED BY DEFAULT AS IDENTITY(START with 10 INCREMENT by 5),
    PROF_ID NUMBER(10) REFERENCES MEMBER(MEMBER_ID),
    UNI_ID NUMBER(10) REFERENCES UNIVERSITY(UNI_ID),
    EMAIL VARCHAR(100),  
    CHECK(REGEXP_LIKE(EMAIL,''.[EeDduU$'')))';
END IF;
SELECT count(*) into nCount FROM user_tables where table_name = 'OPEN_SOURCE_PROJECTS';
IF(nCount > 0)
THEN
    DBMS_OUTPUT.PUT_LINE('OPEN_SOURCE_PROJECTS TABLE ALREADY EXISTS');
ELSE
    EXECUTE IMMEDIATE 'CREATE TABLE OPEN_SOURCE_PROJECTS(
    PROJ_ID NUMBER (10) UNIQUE PRIMARY KEY,
    PROJ_NAME  VARCHAR(100) NOT NULL,
    LAST_NAME VARCHAR(100) NOT NULL,
    PROJ_fDESC  VARCHAR(4000) NOT NULL,
    PROJ_REPO VARCHAR(400) NOT NULL,
    PROF_ID  NUMBER(10) REFERENCES MEMBER(MEMBER_ID))';
END IF;
SELECT count(*) into nCount FROM user_tables where table_name = 'EVENT';
IF(nCount > 0)
THEN
    DBMS_OUTPUT.PUT_LINE('EVENT TABLE ALREADY EXISTS');
ELSE
    EXECUTE IMMEDIATE 'CREATE TABLE EVENT(
    EVT_ID NUMBER (10) UNIQUE PRIMARY KEY,
    EVT_NAME VARCHAR(100) NOT NULL,
    EVT_CAT_ID NUMBER(10) NOT NULL REFERENCES EVENT_CATEGORY(EVT_CATEGORY_ID),
    EVT_DATETIME TIMESTAMP NOT NULL,
    EVT_HOST_ID  NUMBER(10) REFERENCES MEMBER(MEMBER_ID)
    EVT_VENUE NUMBER(10) REFERENCES EVENT_SITE (SITE_ID )
    ECT_STATUS NUMBER(10) REFRENCES EVENT_STATUS(EVT_STATUS)
    EVT_LINK VARCHAR(400) NOTNULL';
END IF;
SELECT count(*) into nCount FROM user_tables where table_name = 'EVENT_REGISTRATION';
IF(nCount > 0)
THEN
    DBMS_OUTPUT.PUT_LINE('EVENT_REGISTRATION TABLE ALREADY EXISTS');
ELSE
    EXECUTE IMMEDIATE 'CREATE TABLE EVENT_REGISTRATION (
    REG_ID NUMBER GENERATED BY DEFAULT AS IDENTITY(START with 10 INCREMENT by 5),
    EVT_ID NUMBER(10) REFERENCES EVENT(EVT_ID) ON DELETE CASCADE,
    MEMBER_ID NUMBER(10) NOT NULL REFERENCES MEMBER(MEMBER_ID)';
END IF;

END;


