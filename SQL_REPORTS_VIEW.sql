
CREATE OR REPLACE VIEW ALL_STUDENTS AS
SELECT M.FIRST_NAME|| ' ' ||M.LAST_NAME "STUDENT NAME",S.EMAIL ,U.UNI_NAME "UNIVERSITY NAME",D.DEG_NAME "DEGREE NAME",C.MAJ_NAME"MAJOR",S.STUDENT_BACKROUND "STUDENT BACKGROUND",S.EXPECTED_GRADDATE"EXPECTED GRADUATE DATE" 
FROM STUDENT S JOIN MEMBERS M
ON M.MEMBER_ID = S.MEMBER_ID
JOIN COURSE_MAJOR C
ON  C.MAJ_ID=S.MAJ_ID
JOIN DEGREE_LEVEL D
ON  S.DEGREE_LEVEL= DEG_ID
JOIN UNIVERSITY U
ON S.UNI_ID = U.UNI_id;
SELECT * FROM ALL_STUDENTS

CREATE OR REPLACE VIEW ALL_PROFESSORS AS
SELECT M.FIRST_NAME|| ' ' || M.LAST_NAME "PROFESSOR NAME",PU.EMAIL,U.UNI_NAME "UNIVERSITY NAME",P.PROF_BACKGROUND "PROFESSOR BACKGROUND",O.PROJ_NAME "PROJECT NAME",P.PROF_HIGHEST_QUAL "PROFESSOR HIGHEST QUALIFICATION"
FROM PROF_UNIVERSITY PU JOIN MEMBERS M
ON M.MEMBER_ID = PU.PROF_ID
JOIN PROFESSOR P
ON  P.MEMBER_ID=M.MEMBER_ID
JOIN OPEN_SOURCE_PROJECTS O
ON  O.PROF_ID= M.MEMBER_ID
JOIN UNIVERSITY U
ON PU.UNI_ID = U.UNI_id;
SELECT * FROM ALL_PROFESSORS

CREATE OR REPLACE VIEW ALL_PROJECTS AS
SELECT U.UNI_NAME "UNIVERSITY NAME",PROJ_NAME "PROJECT NAME",PROJ_DESC "PROJECT_DESCRIPTION",PROJ_REPO "PROJECT_REPOSITORY",M.FIRST_NAME|| ' ' ||M.LAST_NAME "PROJECT PROFESSOR",PU.EMAIL
FROM OPEN_SOURCE_PROJECTS O 
JOIN UNIVERSITY U
ON O.UNI_ID =U.UNI_ID
JOIN MEMBERS M
ON M.MEMBER_ID=O.PROF_ID
LEFT JOIN PROF_UNIVERSITY PU
ON U.UNI_ID=PU.UNI_ID;
SELECT * FROM ALL_PROJECTS

CREATE OR REPLACE VIEW CHART AS 
SELECT COUNT (U.UNI_ID) AS CONTI,U.UNI_NAME AS UNIVERSITIES,U.UNI_NAME AS UNIV_NAME FROM UNIVERSITY U
JOIN STUDENT S
ON S.UNI_ID=U.UNI_ID
JOIN PROF_UNIVERSITY PU
ON PU.UNI_ID =U.UNI_ID
GROUP BY (U.UNI_NAME);
SELECT * FROM CHART

CREATE OR REPLACE VIEW ALL_ALUMNI AS 
select M.FIRST_NAME|| ' ' || M.LAST_NAME "ALUMNI NAME",EMAIL, POSITION,EXPERIENCE "EXPERIENCE IN YEARS", ALUMNI_BACKGROUND "ALUMNI BACKGROUND"
FROM ALUMNI A
JOIN MEMBERS M
on A.MEMBER_ID= M.MEMBER_ID;
SELECT * FROM ALL_ALUMNI


CREATE OR REPLACE VIEW ALL_EVENTS AS 
SELECT E.EVT_NAME "EVENT NAME", M.FIRST_NAME|| ' ' ||M.LAST_NAME AS HOST_NAME,E.EVT_DATETIME"EVENT DATE",
ES.EVT_STATUS  "EVENT STATUS" ,EE.SITE_NAME"SITE NAME",EC.CAT_NAME "CATEGORY",U.UNI_NAME "UNIVERSITY NAME",nvl(E.Evt_link,'NA')"EVENT LINK"
FROM EVENT E 
LEFT JOIN  EVENT_SITE EE
ON E.EVT_VENUE=EE.SITE_ID
JOIN MEMBERS M
ON E.EVT_HOST_ID =M.MEMBER_ID
LEFT JOIN EVENT_CATEGORY EC
ON E.EVT_CAT_ID=EC.CAT_ID
LEFT JOIN UNIVERSITY U
ON U.UNI_ID= EE.UNI_ID
LEFT JOIN EVENT_STATUS ES
ON E.EVT_STATUS =ES.EVT_STATUS_ID
WHERE EVT_STATUS_ID=1;
select * from all_events;

CREATE OR REPLACE VIEW event_member_registration AS 
select e.evt_name "event name",count(*) "Total Registration" from event_registration er
join event e 
on er.evt_id=e.evt_id
GROUP BY er.evt_ID,e.evt_name;
select * from event_member_registration
CREATE OR REPLACE VIEW STUDENT_TABLE_INFORMATION AS  
select *
from (SELECT  CAST(AVG_ROW_LEN AS VARCHAR(200)) AVG_ROW_LEN, CAST(NUM_ROWS AS VARCHAR(200)) NUM_ROWS,CAST(BLOCKS AS VARCHAR(200))BLOCKS,CAST(SAMPLE_SIZE AS VARCHAR(200)) SAMPLE_SIZE
,CAST(LAST_ANALYZED AS VARCHAR(200)) LAST_ANALYZED,CAST(TABLE_NAME AS VARCHAR(200)) TABLE_NAME
FROM user_tables 
WHERE TABLE_NAME = 'STUDENT')  

unpivot (
        INFORMATION for field_name in (TABLE_NAME,NUM_ROWS,BLOCKS,SAMPLE_SIZE,AVG_ROW_LEN,LAST_ANALYZED));
select * FROM STUDENT_TABLE_INFORMATION;



CREATE OR REPLACE VIEW MEMBERS_TABLE_INFORMATION AS  
select *
from (SELECT  CAST(AVG_ROW_LEN AS VARCHAR(200)) AVG_ROW_LEN, CAST(NUM_ROWS AS VARCHAR(200)) NUM_ROWS,CAST(BLOCKS AS VARCHAR(200))BLOCKS,CAST(SAMPLE_SIZE AS VARCHAR(200)) SAMPLE_SIZE
,CAST(LAST_ANALYZED AS VARCHAR(200)) LAST_ANALYZED,CAST(TABLE_NAME AS VARCHAR(200)) TABLE_NAME
FROM user_tables 
WHERE TABLE_NAME = 'MEMBERS')  

unpivot (
        INFORMATION for field_name in (TABLE_NAME,NUM_ROWS,BLOCKS,SAMPLE_SIZE,AVG_ROW_LEN,LAST_ANALYZED));
select * FROM MEMBERS_TABLE_INFORMATION;

CREATE OR REPLACE VIEW UNIVERSITY_TABLE_INFORMATION AS  
select *
from (SELECT  CAST(AVG_ROW_LEN AS VARCHAR(200)) AVG_ROW_LEN, CAST(NUM_ROWS AS VARCHAR(200)) NUM_ROWS,CAST(BLOCKS AS VARCHAR(200))BLOCKS,CAST(SAMPLE_SIZE AS VARCHAR(200)) SAMPLE_SIZE
,CAST(LAST_ANALYZED AS VARCHAR(200)) LAST_ANALYZED,CAST(TABLE_NAME AS VARCHAR(200)) TABLE_NAME
FROM user_tables 
WHERE TABLE_NAME = 'UNIVERSITY')  

unpivot (
        INFORMATION for field_name in (TABLE_NAME,NUM_ROWS,BLOCKS,SAMPLE_SIZE,AVG_ROW_LEN,LAST_ANALYZED));
select * FROM UNIVERSITY_TABLE_INFORMATION;

CREATE OR REPLACE VIEW EVENT_TABLE_INFORMATION AS  
select *
from (SELECT  CAST(AVG_ROW_LEN AS VARCHAR(200)) AVG_ROW_LEN, CAST(NUM_ROWS AS VARCHAR(200)) NUM_ROWS,CAST(BLOCKS AS VARCHAR(200))BLOCKS,CAST(SAMPLE_SIZE AS VARCHAR(200)) SAMPLE_SIZE
,CAST(LAST_ANALYZED AS VARCHAR(200)) LAST_ANALYZED,CAST(TABLE_NAME AS VARCHAR(200)) TABLE_NAME
FROM user_tables 
WHERE TABLE_NAME = 'EVENT')  

unpivot (
        INFORMATION for field_name in (TABLE_NAME,NUM_ROWS,BLOCKS,SAMPLE_SIZE,AVG_ROW_LEN,LAST_ANALYZED));
select * FROM EVENT_TABLE_INFORMATION;
